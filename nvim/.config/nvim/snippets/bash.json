{
  "Bash Script Header": {
    "prefix": "bashheader",
    "body": [
      "#!/usr/bin/env bash",
      "",
      "set -euo pipefail",
      "",
      "${0:# Your script here}"
    ],
    "description": "Bash script header with safety options"
  },

  "Bash Function": {
    "prefix": "bashfunction",
    "body": [
      "${1:function_name}() {",
      "  local ${2:param1}=\"\\${1:-${3:default}}\"",
      "  ",
      "  ${0:# Function body}",
      "}"
    ],
    "description": "Bash function with parameters"
  },

  "Bash Argument Parser": {
    "prefix": "bashargs",
    "body": [
      "# Parse command line arguments",
      "while [[ \\$# -gt 0 ]]; do",
      "  case \\$1 in",
      "    -${1:f}|--${2:file})",
      "      ${3:FILE}=\"\\$2\"",
      "      shift 2",
      "      ;;",
      "    -${4:v}|--${5:verbose})",
      "      ${6:VERBOSE}=true",
      "      shift",
      "      ;;",
      "    -*)",
      "      echo \"Unknown option: \\$1\"",
      "      exit 1",
      "      ;;",
      "    *)",
      "      ${7:POSITIONAL_ARGS}+=(\"\\$1\") # save positional arg",
      "      shift",
      "      ;;",
      "  esac",
      "done"
    ],
    "description": "Parse command line arguments in bash"
  },

  "Bash Error Handling": {
    "prefix": "basherror",
    "body": [
      "error() {",
      "  echo \"[ERROR] \\$1\" >&2",
      "  exit 1",
      "}",
      "",
      "warn() {",
      "  echo \"[WARNING] \\$1\" >&2",
      "}",
      "",
      "info() {",
      "  echo \"[INFO] \\$1\"",
      "}"
    ],
    "description": "Bash error handling functions"
  },

  "Bash Check Command": {
    "prefix": "bashcheck",
    "body": [
      "if ! command -v ${1:command} &> /dev/null; then",
      "  echo \"${1:command} is not installed. Please install it first.\"",
      "  exit 1",
      "fi"
    ],
    "description": "Check if a command exists"
  }
}
